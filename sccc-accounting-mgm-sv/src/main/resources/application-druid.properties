# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# Name of the datasource.
spring.datasource.druid.name=dataSource
# Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
spring.datasource.druid.type=com.alibaba.druid.pool.DruidDataSource
# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
spring.datasource.druid.driverClassName=com.mysql.jdbc.Driver
# JDBC url of the database. 
# url后追加useConfigs=maxPerformance(慎用，建议在dataSource的相关属性内根据情况配置以下各项)
# 相当于打开所有性能相关的属性，cachePrepStmts=true,cacheCallableStmts=true,cacheServerConfiguration=true,useLocalSessionState=true,elideSetAutoCommits=true,alwaysSendSetIsolation=false,enableQueryTimeouts=false
spring.datasource.druid.url=jdbc:mysql://192.168.10.132:3306/wen?useUnicode=true&characterEncoding=utf-8&useSSL=false
# Login user of the database.
spring.datasource.druid.username=root
# Login password of the database.
spring.datasource.druid.password=svP@55w0rd

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
# 配置获取连接等待超时的时间,单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.druid.maxWait=40000
spring.datasource.druid.useUnfairLock=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.druid.minEvictableIdleTimeMillis=300000
# 在mysql中通常为select 'x'，在oracle中通常为 select 1 from dual
spring.datasource.druid.validationQuery=select 'x'
# 设为true，这个配置不影响性能，并且保证安全性。
spring.datasource.druid.testWhileIdle=true
# 设为true，这个配置会降低性能
spring.datasource.druid.testOnBorrow=false
# 设为true，这个配置会降低性能
spring.datasource.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 ；PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。
spring.datasource.druid.poolPreparedStatements=true
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.druid.filters=stat,wall,log4j2
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.useGlobalDataSourceStat=false

# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.druid.webStatFilter.urlPattern=/*
spring.datasource.druid.webStatFilter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.webStatFilter.sessionStatMaxCount=1000
spring.datasource.druid.webStatFilter.sessionStatEnable=true
#spring.datasource.druid.webStatFilter.principalSessionName=
#spring.datasource.druid.webStatFilter.principalCookieName=
spring.datasource.druid.webStatFilter.profileEnable=true

# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.statViewServlet.urlPattern=/druid/*
spring.datasource.druid.statViewServlet.resetEnable=false
spring.datasource.druid.statViewServlet.loginUsername=smartadmin
spring.datasource.druid.statViewServlet.loginPassword=smartP@55W0rd
#spring.datasource.druid.statViewServlet.allow=127.0.0.1
#IP白名单 没有配置或者为空，则允许所有访问
#spring.datasource.druid.statViewServlet.allow=127.0.0.1
#IP黑名单 deny优先于allow
#spring.datasource.druid.statViewServlet.deny=

# Spring监控配置，说明请参考Druid Github Wiki，配置_配置WebStatFilter
# 如果spring.datasource.druid.aop-patterns要代理的类没有定义interface请设置spring.aop.proxy-target-class=true
#spring.datasource.druid.aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
